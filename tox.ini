# Tox configuration for WASM Shim for Torch
# Run tests across multiple Python versions and environments

[tox]
envlist = py{310,311,312}, lint, security, docs, coverage
isolated_build = true

[gh-actions]
python =
    3.10: py310
    3.11: py311, lint, security, docs
    3.12: py312

[testenv]
deps = 
    -r requirements-dev.txt
commands =
    pytest {posargs:tests/} --cov=wasm_torch --cov-report=term --cov-report=xml
setenv =
    PYTHONPATH = {toxinidir}/src
    COVERAGE_FILE = {envtmpdir}/.coverage.{envname}

[testenv:lint]
deps =
    ruff
    black
    mypy
    isort
commands =
    ruff check src/ tests/
    ruff format --check src/ tests/
    mypy src/
    isort --check-only --diff src/ tests/

[testenv:security]
deps =
    bandit[toml]
    safety
    pip-audit
commands =
    bandit -r src/
    safety check
    pip-audit

[testenv:docs]
deps =
    -r requirements-dev.txt
commands =
    sphinx-build -W -b html docs/ docs/_build/html
    sphinx-build -W -b linkcheck docs/ docs/_build/linkcheck

[testenv:coverage]
deps =
    coverage[toml]
    -r requirements-dev.txt
commands =
    coverage combine
    coverage report --fail-under=80
    coverage html
depends =
    py{310,311,312}

[testenv:benchmark]
deps =
    -r requirements-dev.txt
commands =
    pytest tests/benchmarks/ --benchmark-only --benchmark-json={envtmpdir}/benchmarks.json

[testenv:integration]
deps =
    -r requirements-dev.txt
commands =
    pytest tests/integration/ -v --tb=short

[testenv:build]
deps =
    build
    twine
commands =
    python -m build
    twine check dist/*

[testenv:release]
deps =
    build
    twine
passenv =
    TWINE_*
commands =
    python -m build
    twine check dist/*
    twine upload dist/*

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv