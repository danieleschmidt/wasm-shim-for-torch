/**
 * @file version.h
 * @brief Version information for WASM Torch runtime
 * 
 * This file is automatically generated from version.h.in by CMake.
 * Do not edit this file directly.
 */

#ifndef WASM_TORCH_VERSION_H
#define WASM_TORCH_VERSION_H

// Version numbers
#define WASM_TORCH_VERSION_MAJOR @WASM_TORCH_VERSION_MAJOR@
#define WASM_TORCH_VERSION_MINOR @WASM_TORCH_VERSION_MINOR@
#define WASM_TORCH_VERSION_PATCH @WASM_TORCH_VERSION_PATCH@

// Version string
#define WASM_TORCH_VERSION_STRING "@WASM_TORCH_VERSION@"

// Build configuration
#cmakedefine WASM_TORCH_USE_SIMD
#cmakedefine WASM_TORCH_USE_THREADS
#cmakedefine WASM_TORCH_DEBUG_LOGGING
#cmakedefine WASM_TORCH_PROFILING

// Platform detection
#ifdef __EMSCRIPTEN__
    #define WASM_TORCH_PLATFORM_WASM 1
    #define WASM_TORCH_PLATFORM_NATIVE 0
#else
    #define WASM_TORCH_PLATFORM_WASM 0
    #define WASM_TORCH_PLATFORM_NATIVE 1
#endif

// Compiler and build info
#define WASM_TORCH_BUILD_TYPE "@CMAKE_BUILD_TYPE@"
#define WASM_TORCH_COMPILER "@CMAKE_CXX_COMPILER_ID@"
#define WASM_TORCH_BUILD_DATE __DATE__
#define WASM_TORCH_BUILD_TIME __TIME__

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @brief Get the WASM Torch version string
 * @return Version string in format "major.minor.patch"
 */
const char* wasm_torch_get_version(void);

/**
 * @brief Get the build configuration information
 * @return Build configuration string
 */
const char* wasm_torch_get_build_info(void);

/**
 * @brief Check if SIMD support is enabled
 * @return 1 if SIMD is enabled, 0 otherwise
 */
int wasm_torch_has_simd(void);

/**
 * @brief Check if threading support is enabled
 * @return 1 if threading is enabled, 0 otherwise
 */
int wasm_torch_has_threads(void);

#ifdef __cplusplus
}
#endif

#endif // WASM_TORCH_VERSION_H